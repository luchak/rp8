001

 each chunk contains (1) a rollup of the current state at its start, and (2) an _unsorted_ array of events (conflict: later wins)
 when a chunk is loaded, we scan its whole list of events and stick them in a table indexed by tick.
 duplicates can be discovered at this time and eliminated (rule: last event wins)
 with 64 event types and k events per bar, a chunk size of n bars gets us a size-64 array every n bars, plus a size 2^ceil(log_2 kn) events list
 so that's 8*(64/n+2^ceil(log_2 kn)/n) -> (512+2^(3+ceil(log_2 k + log_2 n)))/n bytes per bar

 --

 002

a bar is
snapshot: string
events: table<k=param_idx, v=event_string>
everything is passed in as a number array
a new bar is just an array of n_params numbers
an event is a (param, value) pair

--

003

state contents:
real values: 0=>0,128=>1
bool values: 0=>false,128 (or any nonzero)=>true
int values: identity map
also watch out for packed bitfield-ish things

--

004

draw "sprite" interpretation

number => draw that sprite
 (subject to width value)
string => unpack to text
 params and draw those
